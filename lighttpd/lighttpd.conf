####  Lighttpd Webserver filte ####

input {

  	file {
    		path => '/var/log/lighttpd/error.log'
    		type => "lighttpd_error"
    		start_position => "beginning"
  	}

  	file {
    		path => '/var/log/lighttpd/access.log'
    		type => "lighttpd_access"
    		start_position => "beginning"
  	}
}

###

filter {
	if [type] == "lighttpd_access" {

		grok {
                	match => { "message" => "(::ffff:)?(%{IPORHOST:clientip}) (?:%{IPORHOST:httphost}|-) - \[%{HTTPDATE:timestamp_log}\] \"(?:%{WORD:verb} %{GREEDYDATA:request}(?: HTTP/%{NUMBER:httpversion})|-)\" %{NUMBER:response} %{NUMBER:bytes} %{QS:referrer} %{QS:agent}" }
               }

        	date { match => [ "timestamp_log" , "dd/MMM/YYYY:HH:mm:ss Z"  ] locale => "en"  target => "timestamp_log" }
		# geoip {	source => "clientip" target => "geoip" }
	} 


	if [type] == "lighttpd_error" {

        	grok {
		
			match => { "message" => "%{TIMESTAMP_ISO8601:timestamp_log}: \(%{GREEDYDATA:source_file}\) %{GREEDYDATA:error_reason}" }
		}

                date { match => [ "timestamp_log" , "YYYY-MM-dd HH:mm:ss", "ISO8601" ] locale => "en" target => "timestamp_log" }
		# geoip {	source => "clientip" target => "geoip" }
    	}

}

###

output { 
	stdout { codec => rubydebug }
}
